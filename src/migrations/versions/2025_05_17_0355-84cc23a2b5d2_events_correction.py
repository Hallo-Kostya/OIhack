"""events correction

Revision ID: 84cc23a2b5d2
Revises: 2f2f0cdb1c26
Create Date: 2025-05-17 03:55:23.179283

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '84cc23a2b5d2'
down_revision: Union[str, None] = '2f2f0cdb1c26'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column('events', 'description',
               existing_type=sa.TEXT(),
               nullable=True)
    op.alter_column('events', 'end_date',
               existing_type=postgresql.TIMESTAMP(),
               nullable=True)
    op.alter_column('events', 'location',
               existing_type=sa.VARCHAR(length=255),
               nullable=True)
    op.create_foreign_key(None, 'events', 'users', ['organizer_id'], ['id'], ondelete='CASCADE')
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(None, 'events', type_='foreignkey')
    op.alter_column('events', 'location',
               existing_type=sa.VARCHAR(length=255),
               nullable=False)
    op.alter_column('events', 'end_date',
               existing_type=postgresql.TIMESTAMP(),
               nullable=False)
    op.alter_column('events', 'description',
               existing_type=sa.TEXT(),
               nullable=False)
    # ### end Alembic commands ###
